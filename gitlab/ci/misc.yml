#check syntax:
#  extends: [.short_job]
#  stage: style
#  script:
#    - ./gitlab/syntax.sh
#
#check static codecov:
#  extends: [.tiny_job]
#  stage: ci_checks
#  image: bash
#  script:
#    - wget https://codecov.io/bash -O newcodecov
#    - diff newcodecov gitlab/uploadcodecov.sh
#
#phpcs_compatibility:
#  extends: [.tiny_job]
#  stage: style
#  image: pipelinecomponents/php-codesniffer:latest
#  parallel:
#    matrix:
#      - PHPVERSION: ["7.4","8.0","8.1"]
#  script:
#    - phpcs --config-set installed_paths /app/vendor/phpcompatibility/php-compatibility
#    - >
#      phpcs -s -p --colors
#      --standard=PHPCompatibility
#      --extensions=php
#      --runtime-set testVersion $PHPVERSION
#      lib/lib.*.php
#      etc
#      judge
#      webapp/src
#      webapp/tests
#      webapp/public
#      webapp/config
#
## This finds different problems from codesniffer
#php linter:
#  extends: [.tiny_job]
#  stage: style
#  image: pipelinecomponents/php-linter:latest
#  script:
#    - >
#      parallel-lint --colors
#      lib/lib.*.php
#      etc
#      judge
#      webapp/src
#      webapp/tests
#      webapp/public
#      webapp/config
#
#php-cs-fixer:
#  extends: [.tiny_job]
#  stage: style
#  image:
#    name: cytopia/php-cs-fixer
#    entrypoint: [""]
#  artifacts:
#    when: always
#    reports:
#      codequality: code-quality.json
#  script:
#    - /usr/bin/php-cs-fixer fix --format=gitlab --dry-run --diff . > code-quality.json || true
#
#codespell:
#  extends: [.tiny_job]
#  stage: style
#  script:
#    - python3 gitlab/codespell_gitlab.py
#
#detect dump:
#  extends: [.tiny_job]
#  image: bash
#  stage: style
#  script:
#    - OUT=$(find ./
#        -name ".git" -type d -prune -o
#        -name "cache" -type d -prune -o
#        -name "ace" -type d -prune -o
#        -type f -print0 | xargs -0 grep --color "dump(" | grep -v "Yaml::dump(")
#    - echo $OUT
#    - exit $(($(wc -l <<< $OUT)-1))

run chroot script checks:
  extends: [.normal_job]
  stage: chroot_checks
  parallel:
    matrix:
      - PLACEHOLDER:
        - trigger_with_default_values
      - ARCH:
        - amd64
        - arm64
        - armhf
        - i386
      - FORCEDOWNLOAD:
        - 1
        - 0
      - DISTRO:
        - Debian
        - Ubuntu
      - RELEASE:
        - jammy
        - bionic
      - ARCH:
        - amd64
        DISTRO:
        - Debian
        - Ubuntu
      #- RELEASE:
      #    - focal
      #    - bionic
      #- DISTRO: Debian
      #  RELEASE:
      #    - wheezy
      #    - buster
      - ARCH:
        - arm64
        RELEASE:
        - xenial
      - DISTRO:
        - Debian
        RELEASE:
        - stable
        - buster
      - ARCH: armhf
        DISTRO: Ubuntu
        RELEASE: jammy
  script:
    - ./gitlab/chroot_checks.sh

run chroot script checks (debian):
  extends: [.normal_job]
  stage: chroot_checks
  image: debian
  parallel:
    matrix:
      - PLACEHOLDER:
        - trigger_with_default_values
      - ARCH:
        - amd64
        - arm64
        - i386
      - FORCEDOWNLOAD:
        - 1
      - MIRROR:
        - ftp.ca.debian.org/debian/
        - ftp.br.debian.org/debian/
        - debian.cc.lehigh.edu
  script:
    - sudo apt update
    - sudo apt install -y acl zip unzip mariadb-server apache2 \
            php php-fpm php-gd php-cli php-intl php-mbstring php-mysql \
                  php-curl php-json php-xml php-zip composer ntp
    - sudo apt install -y make pkg-config sudo debootstrap libcgroup-dev \
            php-cli php-curl php-json php-xml php-zip lsof procps
    - ./gitlab/chroot_checks.sh

run chroot script checks (fedora):
  extends: [.normal_job]
  stage: chroot_checks
  image: fedora
  parallel:
    matrix:
      - PLACEHOLDER:
        - trigger_with_default_values
      - ARCH:
        - amd64
      - FORCEDOWNLOAD:
        - 1
      - MIRROR:
        - ftp.ca.debian.org/debian/
        ARCH:
        - amd64
  script:
    - yum update -y
    - yum install -y make pkgconfig sudo libcgroup-devel lsof \
            php-cli php-mbstring php-xml php-process procps-ng \
            acl zip unzip mariadb-server httpd php-gd php-cli \
            php-intl php-mbstring php-mysqlnd php-xml php-zip \
            composer git
    - ./gitlab/chroot_checks.sh

